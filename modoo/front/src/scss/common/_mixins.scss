@charset "utf-8";

@mixin setBackgroundImage($url, $left: 0, $top: 0, $size: auto, $repeat: no-repeat, $color: null) {
	background:$color url(#{$url}) $repeat $left $top;
	background-size: $size;
}
@mixin setDataUri($url, $left: 0, $top: 0, $size: auto, $repeat: no-repeat, $color: null) {
	background: $color url(#{$url}) $repeat $left $top;
	background-size: $size;
}

// clearfix
@mixin clearfix() {
	&:before,
	&:after{
		content: " ";
		display: table;
	}
	&:after{
		clear: both;
	}
}

@mixin backgroundOpacity($color, $opacity: 1) {
	background: rgba($color, $opacity);
}
@mixin borderOpacity($color, $opacity: 1) {
	border-color: rgba($color, $opacity);
}

// spritesmith mixins
@mixin spriteWidth($sprite) {
	@if $DEVICE == "pc" {
		width: nth($sprite, 5);
	} @else {
		width: nth($sprite, 5) / 2;
	}
}
@mixin spriteHeight($sprite) {
	@if $DEVICE == "pc" {
		height: nth($sprite, 6);
	} @else {
		height: nth($sprite, 6) / 2;
	}
}
@mixin spriteImage($sprite) {
	$sprite-image: nth($sprite, 9);
	background-image: url(#{$sprite-image});
}
@mixin spriteSize($sprite) {
	@include spriteWidth($sprite);
	@include spriteHeight($sprite);
}
@mixin spritePosition($sprite) {
	@if $DEVICE == "pc" {
		$sprite-offset-x: nth($sprite, 3);
		$sprite-offset-y: nth($sprite, 4);
	} @else {
		$sprite-offset-x: nth($sprite, 3) / 2;
		$sprite-offset-y: nth($sprite, 4) / 2;
	}
	background-position: $sprite-offset-x  $sprite-offset-y;
}
@mixin spriteImageSize($sprite) {
	@if $DEVICE == 'm' {
		background-size: (nth($sprite, 7) / 2) (nth($sprite, 8) / 2);
	}
}
@mixin spriteImageAlign($sprite, $align) {
	@if $DEVICE == pc {
		@if $align == center {
			margin-left:- nth($sprite, 5) / 2;
		} @else if $align == middle{
			margin-top:- nth($sprite, 6) / 2;
		} @else if $align == both{
			margin-top:- nth($sprite, 6) / 2;
			margin-left:- nth($sprite, 5) / 2;
		}
	} @else {
		@if $align == center {
			margin-left: - nth($sprite, 5) / 4;
		} @else if $align == middle {
			margin-top: - nth($sprite, 6) / 4;
		} @else if $align == both {
			margin-top: - nth($sprite, 6) / 4;
			margin-left: - nth($sprite, 5) / 4;
		}
	}
}
@mixin setSprite($sprite, $align: none) {
	overflow: hidden;
	$origin: str-slice(nth($sprite, 9), 8, -12);
	$name: '%#{$origin}';
	@extend #{$name};
	@if $DEVICE == 'm' {
		@extend #{$name}-size;
	}
	@include spriteSize($sprite);
	@include spritePosition($sprite);
	@include spriteImageAlign($sprite, $align);
}
@mixin setSprites($sprites) {
	@each $sprite in $sprites {
		$sprite-name: nth($sprite, 10);
		.#{$sprite-name} {
			@include setSprite($sprite);
		}
	}
}